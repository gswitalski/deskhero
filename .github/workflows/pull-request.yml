name: Pull Request Workflow

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      # Frontend lint
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Lint Frontend
        working-directory: frontend
        run: npm run lint
        
      # Backend lint
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Make gradlew executable
        working-directory: backend
        run: chmod +x ./gradlew
          
      - name: Lint Backend
        working-directory: backend
        run: ./gradlew checkstyleMain checkstyleTest

  test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Make gradlew executable
        working-directory: backend
        run: chmod +x ./gradlew
          
      - name: Run Backend Tests
        working-directory: backend
        run: ./gradlew test

  status-comment:
    name: Update PR Status
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Create Status Comment
        uses: actions/github-script@v7
        with:
          script: |
            const lintStatus = '${{ needs.lint.result }}';
            const testStatus = '${{ needs.test.result }}';
            
            let summary = '## Pull Request Status üö¶\n\n';
            
            summary += '### Lint Status\n';
            summary += lintStatus === 'success' ? '‚úÖ Passed\n\n' : '‚ùå Failed\n\n';
            
            summary += '### Test Status\n';
            summary += testStatus === 'success' ? '‚úÖ Passed\n\n' : '‚ùå Failed\n\n';
            
            const overallStatus = (lintStatus === 'success' && testStatus === 'success') 
              ? 'üéâ All checks passed!' 
              : '‚ùå Some checks failed';
            
            summary += `\n### Overall Status: ${overallStatus}`;
            
            const { owner, repo } = context.repo;
            
            // Log current PR information for debugging
            console.log(`PR Info - Owner: ${owner}, Repo: ${repo}, PR Number: ${context.issue.number}`);
            
            try {
              await github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: context.issue.number,
                body: summary
              });
              console.log('Comment created successfully');
            } catch (error) {
              console.error('Error creating comment:', error);
              core.setFailed(`Failed to create comment: ${error.message}`);
            } 
